{"version":3,"sources":["scripts/app-32aacc17a2.js"],"names":["angular","module","UserModalController","candidate","UserFactory","$uibModalInstance","$log","toastr","vm","this","formOptions","name","email","loading","success","undefined","errorMessage","createUser","then","response","createdUser","data","info","close","error","message","isValid","dismiss","$inject","controller","RestFactory","apiBaseUrl","_","$q","getUsers","parameters","userId","localUrl","userUrl","isDefined","makeRequest","url","method","params","valid","requiredParams","forEach","p","hasOwnProperty","dfd","defer","resolve","status","promise","deleteUser","factory","UserDeleteModalController","user","id","UserController","users","$state","candidateName","$uibModal","uiGridConstants","selectedUser","introOptions","steps","intro","element","gridOptions","enableFiltering","enableRowSelection","enableFullRowSelection","enableHorizontalScrollbar","scrollbars","NEVER","enableVerticalScrollbar","WHEN_NEEDED","multiSelect","onRegisterApi","api","gridApi","selection","on","rowSelectionChanged","row","isSelected","entity","addUser","modalInstance","open","animation","templateUrl","result","unshift","grid","modifyRows","clearSelectedRows","selectRow","Date","indexToDelete","findIndex","u","splice","viewTransfers","transitionTo","LoginController","AuthenticationFactory","logOut","pass","logIn","TransferModalController","TransferFactory","amount","createTransfer","createdTransfer","getTransfers","transferUrl","userTransferUrlBase","underscoreParams","snakeCase","TransferController","transfers","addTransfer","push","acmeNavbar","NavbarController","isLoggedIn","logout","directive","restrict","scope","creationDate","controllerAs","bindToController","CandidateModalController","candidates","CandidateFactory","createCandidate","indexOf","createdCandidate","getAllCandidates","allData","chain","map","uniq","value","replace","CandidateController","$stateParams","initializeCandidate","onSelect","notify","onSubmit","webDevTec","getTec","title","description","logo","service","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","extraValues","type","pause","$watch","contributors","contributor","login","$on","MalarkeyController","githubContributor","activate","getContributors","template","link","$http","limit","getContributorsComplete","getContributorsFailed","toJson","get","apiHost","requestObject","_successHandler","_failureHandler","urlResponse","failureResponse","statusText","defaults","headers","post","MainController","AppInfo","Store","setState","stateIndex","currentState","possibleStates","to","displayName","accessible","getProperty","$cookies","allowedCredentials","loggedIn","put","remove","runBlock","$rootScope","event","toState","toParams","fromState","fromParams","auth","preventDefault","debug","run","routerConfig","$stateProvider","$urlRouterProvider","state","root","ncyBreadcrumb","label","skip","squash","parent","views","@main","otherwise","config","constant","console","moment","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,4BAA6B,gBAAiB,yBAA0B,UAAW,mBAAoB,oBAAqB,YAAa,YAAa,UAAW,aAAc,aAAc,SAAU,YAAa,eAAgB,cAIhP,WACE,YAOA,SAASC,GAAoBC,EAAWC,EAAaC,EAAmBC,EAAMC,GAC5E,GAAIC,GAAKC,IACTD,GAAGE,aACDC,KAAM,GACNC,MAAO,GACPT,UAAWA,GAGbK,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbP,EAAGQ,aAAe,GAKlBR,EAAGS,WAAa,WACdT,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbX,EAAYa,WAAWT,EAAGE,aACvBQ,KACC,SAASC,GAEP,GADAX,EAAGK,SAAU,EACTM,EAASL,QAAS,CACpB,GAAIM,GAAcD,EAASE,IAC3Bf,GAAKgB,KAAK,oBACVhB,EAAKgB,KAAKF,GACVZ,EAAGM,SAAU,EACbP,EAAOO,QAAQ,6BAA+BN,EAAGE,YAAYC,MAC7DH,EAAGe,MAAMH,OAETd,GAAKkB,MAAML,GACXX,EAAGQ,aAAeG,EAASM,QAC3BjB,EAAGM,SAAU,EACbN,EAAGK,SAAU,KAUvBL,EAAGkB,QAAU,WACX,MAAOlB,GAAGE,YAAYC,MAAQH,EAAGE,YAAYE,QAAUJ,EAAGK,SAM5DL,EAAGe,MAAQ,SAASH,GACbA,EAGHf,EAAkBkB,MAAMH,GAFxBf,EAAkBsB,QAAQ,WAzDhCzB,EAAoB0B,SAAW,YAAa,cAAe,oBAAqB,OAAQ,UAAxF5B,QACGC,OAAO,4BACP4B,WAAW,sBAAuB3B,MA+DvC,WACE,YAgBA,SAASE,GAAY0B,EAAaC,EAAYC,EAAGC,GAU/C,QAASC,GAASC,GAChB,GAAIhC,GAAYgC,EAAWhC,UACvBiC,EAASD,EAAWC,OACpBC,EAAWC,CAIf,OAHItC,SAAQuC,UAAUH,KACpBC,GAAY,IAAMD,GAEbN,EAAYU,aACjBC,IAAKJ,EACLK,OAAQ,MACRC,QACExC,UAAWA,KAajB,QAASc,GAAWkB,GAClB,GAAIS,IAAQ,EACRC,GAAkB,OAAQ,QAAS,YAMvC,IALAb,EAAEc,QAAQD,EAAgB,SAASE,GAC5BZ,EAAWa,eAAeD,KAC7BH,GAAQ,MAGPA,EAAO,CACV,GAAIK,GAAMhB,EAAGiB,OAOb,OANAD,GAAIE,SACFrC,SAAS,EACTO,QACA+B,OAAQ,gCACR3B,QAAS,kCAEJwB,EAAII,UAEb,MAAOvB,GAAYU,aACjBC,IAAKH,EACLI,OAAQ,OACRrB,KAAMc,IAUV,QAASmB,GAAWnB,GAClB,MAAOL,GAAYU,aACjBC,IAAKH,EAAU,IAAMH,EAAWC,OAChCM,OAAQ,SACRC,OAAQR,IApEZ,GAAIG,GAAUP,EAAa,MAwE3B,QACEd,WAAYA,EACZqC,WAAYA,EACZpB,SAAUA,GAzFd9B,EAAYwB,SAAW,cAAe,aAAc,IAAK,MADzD5B,QACGC,OAAO,4BACPsD,QAAQ,cAAenD,MA8F5B,WACE,YAOA,SAASoD,GAA0BC,EAAMrD,EAAaC,EAAmBC,EAAMC,GAC7E,GAAIC,GAAKC,IACTD,GAAGE,aACD0B,OAAQqB,EAAKC,GACb/C,KAAM8C,EAAK9C,KACXC,MAAO6C,EAAK7C,MACZT,UAAWsD,EAAKtD,WAGlBK,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbP,EAAGQ,aAAe,GAKlBR,EAAG8C,WAAa,WACd9C,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbX,EAAYkD,WAAW9C,EAAGE,aAAaQ,KACnC,SAASC,GACPX,EAAGK,SAAU,EACTM,EAASL,SACXR,EAAKgB,KAAK,gBACVd,EAAGM,SAAU,EACbP,EAAOe,KAAK,6BAA+Bd,EAAGE,YAAYC,MAC1DH,EAAGe,OAAM,KAETjB,EAAKkB,MAAML,GACXX,EAAGQ,aAAeG,EAASM,QAC3BjB,EAAGM,SAAU,EACbN,EAAGK,SAAU,MASvBL,EAAGe,MAAQ,SAASH,GACbA,EAGHf,EAAkBkB,MAAMH,GAFxBf,EAAkBsB,QAAQ,WA7ChC6B,EAA0B5B,SAAW,OAAQ,cAAe,oBAAqB,OAAQ,UAFzF5B,QACGC,OAAO,4BACP4B,WAAW,4BAA6B2B,MAqD7C,WACE,YAOA,SAASG,GAAeC,EAAOC,EAAQC,EAAeC,EAAWzD,EAAM0D,EAAiBhC,GACtF,GAAIxB,GAAKC,IACTD,GAAGoD,MAAQA,EACXpD,EAAGsD,cAAgBA,EACnBtD,EAAGyD,aAAelD,OAElBP,EAAG0D,cACDC,QAEIC,MAAO,8HAGPA,MAAO,2KACPC,QAAS,0BAGTD,MAAO,wIACPC,QAAS,6BASf7D,EAAG8D,aACDjD,KAAMb,EAAGoD,MACTW,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,EACxBC,0BAA2BV,EAAgBW,WAAWC,MACtDC,wBAAyBb,EAAgBW,WAAWG,YACpDC,aAAa,EACbC,cAAe,SAASC,GACtBzE,EAAG0E,QAAUD,EACbzE,EAAG0E,QAAQC,UAAUC,GAAGC,oBAAoB,KAAM,SAASC,GACzD9E,EAAGyD,aAAelD,OACduE,EAAIC,aACN/E,EAAGyD,aAAeqB,EAAIE,YAS9BhF,EAAGiF,QAAU,WACX,GAAIC,GAAgB3B,EAAU4B,MAC5BC,WAAW,EACXC,YAAa,gCACbhE,WAAY,mCACZsB,SACEhD,UAAW,WACT,MAAOK,GAAGsD,iBAKhB4B,GAAcI,OAAO5E,KAAK,SAAUE,GAClCZ,EAAGoD,MAAMmC,QAAQ3E,GACbZ,EAAG0E,UACL1E,EAAG0E,QAAQc,KAAKC,WAAWzF,EAAG8D,YAAYjD,MAC1Cb,EAAG0E,QAAQC,UAAUe,oBACrB1F,EAAG0E,QAAQC,UAAUgB,UAAU3F,EAAG8D,YAAYjD,KAAK,MAEpD,WACDf,EAAKgB,KAAK,uBAAyB,GAAI8E,UAO3C5F,EAAG8C,WAAa,WACd,GAAIoC,GAAgB3B,EAAU4B,MAC5BC,WAAW,EACXC,YAAa,uCACbhE,WAAY,+CACZsB,SACEM,KAAM,WACJ,MAAOjD,GAAGyD,gBAKhByB,GAAcI,OAAO5E,KAAK,WACxB,GAAImF,GAAgBrE,EAAEsE,UAAU9F,EAAGoD,MAAO,SAAS2C,GACjD,MAAOA,GAAE7C,KAAOlD,EAAGyD,aAAaP,IAE9B2C,IAAiB,GACnB7F,EAAGoD,MAAM4C,OAAOH,EAAe,GAE7B7F,EAAG0E,UACL1E,EAAG0E,QAAQc,KAAKC,WAAWzF,EAAG8D,YAAYjD,MAC1Cb,EAAG0E,QAAQC,UAAUe,sBAEtB,WACD5F,EAAKgB,KAAK,uBAAyB,GAAI8E,UAI3C5F,EAAGiG,cAAgB,WACjB5C,EAAO6C,aAAa,wBAAyB5C,cAAetD,EAAGsD,cAAe1B,OAAQ5B,EAAGyD,aAAaP,MA1G1GC,EAAe/B,SAAW,QAAS,SAAU,gBAAiB,YAAa,OAAQ,kBAAmB,KAHtG5B,QACGC,OAAO,4BACP4B,WAAW,iBAAkB8B,MAgHlC,WACE,YAOA,SAASgD,GAAgBC,EAAuB/C,GAC9C,GAAIrD,GAAKC,IACTmG,GAAsBC,SACtBrG,EAAGE,aACD+C,KAAM,QACNqD,KAAM,IAGRtG,EAAGM,QAAUC,OACbP,EAAGQ,aAAe,qDAKlBR,EAAGuG,MAAQ,WACTvG,EAAGM,QAAUC,OACT6F,EAAsBG,MAAMvG,EAAGE,YAAY+C,KAAMjD,EAAGE,YAAYoG,OAClEtG,EAAGM,SAAU,EACb+C,EAAO6C,aAAa,oBAEpBlG,EAAGM,SAAU,GAQjBN,EAAGkB,QAAU,WACX,MAAOlB,GAAGE,YAAY+C,MAAQjD,EAAGE,YAAYoG,MA9BjDH,EAAgB/E,SAAW,wBAAyB,UAJpD5B,QACGC,OAAO,4BACP4B,WAAW,kBAAmB8E,MAqCnC,WACE,YAOA,SAASK,GAAwB7G,EAAWiC,EAAQ6E,EAAiB5G,EAAmBC,GACtF,GAAIE,GAAKC,IACTD,GAAGE,aACDwG,OAAQ,EACR/G,UAAWA,EACXiC,OAAQA,GAGV5B,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbP,EAAGQ,aAAe,GAKlBR,EAAG2G,eAAiB,WAClB3G,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbkG,EAAgBE,eAAe3G,EAAGE,aAC/BQ,KACC,SAASC,GACP,GAAIiG,GAAkBjG,EAASE,IAC/Bf,GAAKgB,KAAK,wBACVhB,EAAKgB,KAAK8F,GACV5G,EAAGM,SAAU,EACbN,EAAGe,MAAM6F,IAEX,SAASjG,GACPb,EAAKkB,MAAM,6BACXhB,EAAGM,SAAU,EACbN,EAAGQ,aAAeG,EAASM,WASnCjB,EAAGkB,QAAU,WACX,MAAOlB,GAAGE,YAAYwG,QAAU1G,EAAGE,YAAY0B,SAAW5B,EAAGK,SAM/DL,EAAGe,MAAQ,SAAS6F,GACbA,EAGH/G,EAAkBkB,MAAM6F,GAFxB/G,EAAkBsB,QAAQ,WAhDhCqF,EAAwBpF,SAAW,YAAa,SAAU,kBAAmB,oBAAqB,QALlG5B,QACGC,OAAO,4BACP4B,WAAW,0BAA2BmF,MA2D3C,WACE,YAgBA,SAASC,GAAgBnF,EAAaC,EAAYC,EAAGC,GAYnD,QAASoF,GAAalF,GACpB,GAAIhC,GAAYgC,EAAWhC,UACvBsC,EAAM6E,CAMV,OALInF,GAAWa,eAAe,MAC5BP,GAAO,IAAMN,EAAWuB,GACfvB,EAAWa,eAAe,YACnCP,EAAM8E,EAAsBpF,EAAWC,OAAS,cAE3CN,EAAYU,aACjBC,IAAKA,EACLC,OAAQ,MACRC,QACExC,UAAWA,KAajB,QAASgH,GAAehF,GACtB,GAAIS,IAAQ,EACRC,GAAkB,SAAU,SAAU,aACtC2E,IAQJ,IAPAxF,EAAEc,QAAQD,EAAgB,SAASE,GAC5BZ,EAAWa,eAAeD,GAG7ByE,EAAiBxF,EAAEyF,UAAU1E,IAAMZ,EAAWY,GAF9CH,GAAQ,KAKPA,EAAO,CACV,GAAIK,GAAMhB,EAAGiB,OAEb,OADAD,GAAIE,YACGF,EAAII,QAGb,MAAOvB,GAAYU,aACjBC,IAAK6E,EACL5E,OAAQ,OACRrB,KAAMmG,IAxDV,GAAIF,GAAcvF,EAAa,WAC3BwF,EAAsBxF,EAAa,OA2DvC,QACEsF,aAAcA,EACdF,eAAgBA,GAvEpBF,EAAgBrF,SAAW,cAAe,aAAc,IAAK,MAN7D5B,QACGC,OAAO,4BACPsD,QAAQ,kBAAmB0D,MAiFhC,WACE,YAOA,SAASS,GAAmBC,EAAW5D,EAAW3B,EAAQ0B,EAAexD,EAAMC,GAC7E,GAAIC,GAAKC,IACTD,GAAGmH,UAAYA,EACfnH,EAAG4B,OAASA,EACZ5B,EAAGsD,cAAgBA,EAEnBtD,EAAG0D,cACDC,QAEIC,MAAO,8FAGPA,MAAO,2GACPC,QAAS,gCAGTD,MAAO,qMACPC,QAAS,+BASf7D,EAAG8D,aACDjD,KAAMb,EAAGmH,UACTpD,iBAAiB,EACjBC,oBAAoB,EACpBC,wBAAwB,GAO1BjE,EAAGoH,YAAc,WACf,GAAIlC,GAAgB3B,EAAU4B,MAC5BC,WAAW,EACXC,YAAa,wCACbhE,WAAY,2CACZsB,SACEhD,UAAW,WACT,MAAOK,GAAGsD,eAEZ1B,OAAQ,WACN,MAAO5B,GAAG4B,UAKhBsD,GAAcI,OAAO5E,KAAK,SAAUkG,GAC7BA,EAAgBpE,eAAe,eAClCoE,EAAgBjH,UAAYK,EAAGsD,eAEjCvD,EAAOO,QAAQ,sCACfN,EAAGmH,UAAUE,KAAKT,IACjB,WACD9G,EAAKgB,KAAK,uBAAyB,GAAI8E,UAzD7CsB,EAAmB9F,SAAW,YAAa,YAAa,SAAU,gBAAiB,OAAQ,UAP3F5B,QACGC,OAAO,4BACP4B,WAAW,qBAAsB6F,MAqEtC,WACE,YAOA,SAASI,KAeP,QAASC,GAAiBnB,GACxB,GAAIpG,GAAKC,IACTD,GAAGwH,WAAapB,EAAsBoB,WACtCxH,EAAGyH,OAASrB,EAAsBqB,OATpCF,EAAiBnG,SAAW,wBAR5B,IAAIsG,IACFC,SAAU,IACVtC,YAAa,oCACbuC,OACEC,aAAc,KAEhBxG,WAAYkG,EACZO,aAAc,KACdC,kBAAkB,EAGpB,OAAOL,GAjBTlI,QACGC,OAAO,4BACPiI,UAAU,aAAcJ,MA2B7B,WACE,YAOA,SAASU,GAAyBC,EAAYC,EAAkBrI,EAAmBC,EAAMC,GACvF,GAAIC,GAAKC,IACTD,GAAGiI,WAAaA,EAChBjI,EAAGE,aACDP,UAAW,iBAGbK,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACbP,EAAGQ,aAAe,GAKlBR,EAAGmI,gBAAkB,WACnBnI,EAAGK,SAAU,EACbL,EAAGM,QAAUC,OACTP,EAAGiI,WAAWG,QAAQpI,EAAGE,YAAYP,YAAc,IACrDK,EAAGM,SAAU,EACbN,EAAGQ,aAAe,2BAClBR,EAAGK,SAAU,GAEf6H,EAAiBC,gBAAgBnI,EAAGE,YAAYP,WAC7Ce,KACC,SAASC,GAEP,GADAX,EAAGK,SAAU,EACTM,EAASL,QAAS,CACpB,GAAI+H,GAAmB1H,EAASE,IAChCf,GAAKgB,KAAK,yBACVhB,EAAKgB,KAAKuH,GACVrI,EAAGM,SAAU,EACbP,EAAOO,QAAQ,kCAAoCN,EAAGE,YAAYP,WAClEK,EAAGe,MAAMsH,EAAiB1I,eAE1BG,GAAKkB,MAAML,GACXX,EAAGQ,aAAeG,EAASM,QAC3BjB,EAAGM,SAAU,EACbN,EAAGK,SAAU,KAUvBL,EAAGkB,QAAU,WACX,MAAOlB,GAAGE,YAAYP,YAAcK,EAAGK,SAMzCL,EAAGe,MAAQ,SAASsH,GACbA,EAGHxI,EAAkBkB,MAAMsH,GAFxBxI,EAAkBsB,QAAQ,WApDhC6G,EAAyB5G,SAAW,aAAc,mBAAoB,oBAAqB,OAAQ,UATnG5B,QACGC,OAAO,4BACP4B,WAAW,2BAA4B2G,MAmE5C,WACE,YAeA,SAASE,GAAiBtI,EAAc4B,GAMtC,QAAS8G,KACP,MAAO1I,GAAY8B,UAAU/B,UAAW,cAAce,KAAK,SAASC,GAClE,GAAI4H,GAAU5H,EAASE,IACvB,OAAOW,GAAEgH,MAAMD,GAASE,IAAI,aAAaC,OAAOC,UAUpD,QAASR,GAAgB7E,GACvBA,EAAgBA,EAAcsF,QAAQ,MAAO,GAC7C,IAAIjH,IACFhC,UAAW2D,EACXnD,KAAM,QACNC,MAAO,SAAWkD,EAAgB,OAEpC,OAAO1D,GAAYa,WAAWkB,GAGhC,OACE2G,iBAAkBA,EAClBH,gBAAiBA,GAlCrBD,EAAiB9G,SAAW,cAAe,KAV3C5B,QACGC,OAAO,4BACPsD,QAAQ,mBAAoBmF,MAgDjC,WACE,YAOA,SAASW,GAAoBZ,EAAY5E,EAAQyF,EAAcvF,EAAWzD,GAkExE,QAASiJ,KACHD,EAAaxF,eAAkB2E,EAAWG,QAAQU,EAAaxF,gBAAkB,IACnFtD,EAAGsD,cAAgBwF,EAAaxF,eAnEpC,GAAItD,GAAKC,IACTD,GAAGiI,WAAaA,EAChBc,IAEA/I,EAAG0D,cACDC,QAEIC,MAAO,mHAGPA,MAAO,8EACPC,QAAS,qBAGTD,MAAO,0IACPC,QAAS,kCASf7D,EAAGgJ,SAAW,WACRf,EAAWG,QAAQpI,EAAGsD,gBAAkB,EAC1CD,EAAO6C,aAAa,mBAAoB5C,cAAetD,EAAGsD,gBAAiB2F,QAAQ,IAEnFjJ,EAAGsD,cAAgB,IAOvBtD,EAAGkJ,SAAW,WACZ7F,EAAO6C,aAAa,cAAe5C,cAAetD,EAAGsD,iBAMvDtD,EAAGmI,gBAAkB,WACnB,GAAIjD,GAAgB3B,EAAU4B,MAC5BC,WAAW,EACXC,YAAa,0CACbhE,WAAY,6CACZsB,SACEsF,WAAY,WACV,MAAOjI,GAAGiI,cAKhB/C,GAAcI,OAAO5E,KAAK,SAAU2H,GAClCrI,EAAGiI,WAAWZ,KAAKgB,GACnBrI,EAAGsD,cAAgB+E,GAClB,WACDvI,EAAKgB,KAAK,uBAAyB,GAAI8E,UArD7CiD,EAAoBzH,SAAW,aAAc,SAAU,eAAgB,YAAa,QAXpF5B,QACGC,OAAO,4BACP4B,WAAW,sBAAuBwH,MA6EvC,WACE,YAOA,SAASM,KA4DP,QAASC,KACP,MAAOvI,GA5DT,GAAIA,KAEAwI,MAAS,YACTpH,IAAO,yBACPqH,YAAe,8BACfC,KAAQ,gBAGRF,MAAS,cACTpH,IAAO,yBACPqH,YAAe,4CACfC,KAAQ,oBAGRF,MAAS,SACTpH,IAAO,qBACPqH,YAAe,8BACfC,KAAQ,aAGRF,MAAS,UACTpH,IAAO,4BACPqH,YAAe,8BACfC,KAAQ,gBAGRF,MAAS,QACTpH,IAAO,iCACPqH,YAAe,0CACfC,KAAQ,cAGRF,MAAS,aACTpH,IAAO,wCACPqH,YAAe,oFACfC,KAAQ,mBAGRF,MAAS,YACTpH,IAAO,2BACPqH,YAAe,yHACfC,KAAQ,kBAGRF,MAAS,uBACTpH,IAAO,yCACPqH,YAAe,wEACfC,KAAQ,qBAGRF,MAAS,SACTpH,IAAO,sCACPqH,YAAe,yKACfC,KAAQ,cAIZtJ,MAAKmJ,OAASA,EA/DhB5J,QACKC,OAAO,4BACP+J,QAAQ,YAAaL,MAsE5B,WACE,YAOA,SAASM,GAAaC,GAcpB,QAASC,GAAS/B,EAAOgC,EAAIC,EAAM7J,GACjC,GAAI8J,GACAC,EAASL,EAASE,EAAG,IACvBI,UAAW,GACXC,YAAa,GACbC,WAAY,IACZC,MAAM,EACNC,QAAS,KAGXR,GAAGS,SAAS,iBAEZ7K,QAAQ8C,QAAQsF,EAAM0C,YAAa,SAAS3B,GAC1CoB,EAAOQ,KAAK5B,GAAO6B,QAAnBT,cAGFD,EAAUlC,EAAM6C,OAAO,kBAAmB,WACxCjL,QAAQ8C,QAAQtC,EAAG0K,aAAc,SAASC,GACxCZ,EAAOQ,KAAKI,EAAYC,OAAOJ,QAA/BT,gBAIJnC,EAAMiD,IAAI,WAAY,WACpBf,MAKJ,QAASgB,GAAmBhL,EAAMiL,GAOhC,QAASC,KACP,MAAOC,KAAkBvK,KAAK,WAC5BZ,EAAKgB,KAAK,iCAId,QAASmK,KACP,MAAOF,GAAkBE,gBAAgB,IAAIvK,KAAK,SAASG,GAGzD,MAFAb,GAAG0K,aAAe7J,EAEXb,EAAG0K,eAhBd,GAAI1K,GAAKC,IAETD,GAAG0K,gBAEHM,IAjCFF,EAAmB1J,SAAW,OAAQ,oBAbtC,IAAIsG,IACFC,SAAU,IACVC,OACE0C,YAAa,KAEfY,SAAU,SACVC,KAAMxB,EACNtI,WAAYyJ,EACZhD,aAAc,KAGhB,OAAOJ,GALT+B,EAAarI,SAAW,YAZxB5B,QACGC,OAAO,4BACPiI,UAAU,eAAgB+B,MAuE/B,WACE,YAOA,SAASsB,GAAkBjL,EAAMsL,GAU/B,QAASH,GAAgBI,GASvB,QAASC,GAAwB3K,GAC/B,MAAOA,GAASE,KAGlB,QAAS0K,GAAsBvK,GAC7BlB,EAAKkB,MAAM,oCAAsCxB,QAAQgM,OAAOxK,EAAMH,MAAM,IAT9E,MAJKwK,KACHA,EAAQ,IAGHD,EAAMK,IAAIC,EAAU,0BAA4BL,GACpD3K,KAAK4K,GADDF,SAEEG,GAhBX,GAAIG,GAAU,4DAEVlC,GACFkC,QAASA,EACTT,gBAAiBA,EAGnB,OAAOzB,GACTuB,EAAkB3J,SAAW,OAAQ,SAdrC5B,QACGC,OAAO,4BACPsD,QAAQ,oBAAqBgI,MAiClC,WACE,YAcA,SAASzJ,GAAY8J,EAAOtL,EAAMC,GAahC,QAASiC,GAAYL,GACnB,GAAIgK,IACFzJ,OAAQP,EAAWO,QAAU,MAC7BD,IAAKN,EAAWM,IAQlB,OAL8B,SAAzB0J,EAAczJ,QAAuBP,EAAWa,eAAe,QAClEmJ,EAAc9K,KAAOrB,QAAQgM,OAAO7J,EAAWd,MAE/C8K,EAAcxJ,OAASR,EAAWQ,OAE7BiJ,EAAMO,GAAejL,KAAKkL,EAAiBC,GASpD,QAASD,GAAgBE,GACvB,OACExL,SAAS,EACTO,KAAMiL,EAAYjL,MAUtB,QAASgL,GAAgBE,GAGvB,MAFAjM,GAAKkB,MAAM+K,GACXhM,EAAOiB,MAAM,gCAEXV,SAAS,EACTO,QACA+B,OAAQmJ,EAAgBC,WACxB/K,QAAS8K,EAAgBlL,MAI7B,MAvDAuK,GAAMa,SAASC,QAAQC,KAAK,gBAAkB,qCAwD5CnK,YAAaA,GAvDjBV,EAAYF,SAAW,QAAS,OAAQ,UAfxC5B,QACGC,OAAO,4BACPsD,QAAQ,cAAezB,MA0E5B,WACE,YAOA,SAAS8K,MALT5M,QACGC,OAAO,4BACP4B,WAAW,iBAAkB+K,MAQlC,WACE,YAOA,SAASC,GAAQC,GA2Bf,QAASC,GAASC,GAChBC,EAAeD,EA3BjB,GAAIE,KAEAC,GAAI,YACJC,YAAa,YACbC,WAAY,WACV,OAAO,KAITF,GAAI,QACJC,YAAa,QACbC,WAAY,WACV,MAA0C,QAAnCP,EAAMQ,YAAY,gBAI3BH,GAAI,YACJC,YAAa,YACbC,WAAY,WACV,MAAqC,QAA9BP,EAAMQ,YAAY,WAK3BL,EAAe,CAMnB,QACEC,eAAgBA,EAChBD,aAAcA,EACdF,SAAUA,GAvBdF,EAAQjL,SAAW,SAhBnB5B,QACGC,OAAO,4BACPsD,QAAQ,UAAWsJ,MA4CxB,WACE,YAOA,SAASjG,GAAsB2G,GAa7B,QAASxG,GAAMtD,EAAMqD,GAOnB,MANIrD,KAAS+J,EAAmB/J,MAAQqD,IAAS0G,EAAmB1G,MAClE2G,GAAW,EACXF,EAASG,IAAI,QAAS,SAEtB7G,IAEK4G,EAOT,QAASzF,KACP,MAAOuF,GAAStB,IAAI,UAAYwB,EAMlC,QAAS5G,KACP4G,GAAW,EACXF,EAASI,OAAO,SAnClB,GAAIF,IAAW,EACXD,GACF/J,KAAM,QACNqD,KAAM,QAmCR,QACEC,MAAOA,EACPiB,WAAYA,EACZnB,OAAQA,GA9BZD,EAAsBhF,SAAW,YAjBjC5B,QACGC,OAAO,4BACPsD,QAAQ,wBAAyBqD,MAmDtC,WACE,YAOA,SAASgH,GAAStN,EAAMuN,EAAYhK,EAAQ+C,GAC1CiH,EAAWxC,IAAI,oBACb,SAASyC,EAAOC,EAASC,EAAUC,EAAWC,GACtCH,EAAQI,MAAQvH,EAAsBoB,eAE1CnE,EAAO6C,aAAa,cACpBoH,EAAMM,oBAGZ9N,EAAK+N,MAAM,gBAIbT,EAAShM,SAAW,OAAQ,aAAc,SAAU,yBAlBpD5B,QACGC,OAAO,4BACPqO,IAAIV,MAiBT,WACE,YAYA,SAASW,GAAaC,EAAgBC,GACpCD,EACGE,MAAM,QACLjM,IAAK,QACL0L,MAAM,EACNtI,YAAa,qBACbhE,WAAY,iBACZyG,aAAc,iBACdjH,MACEsN,MAAM,GAERC,eACEC,MAAO,OACPC,MAAM,KAGTJ,MAAM,cACLjM,IAAK,SACLoD,YAAa,4BACbhE,WAAY,kBACZyG,aAAc,kBACd6F,MAAM,EACN9M,MACEsN,MAAM,GAERC,eACEC,MAAO,WAGVH,MAAM,mBACLjM,IAAK,6BACL0L,MAAM,EACNxL,QACEmB,eAAgBqF,MAAO,KAAM4F,QAAQ,IAEvClJ,YAAa,oCACbhE,WAAY,sBACZyG,aAAc,sBACdjH,MACEsN,MAAM,EACNvB,YAAa,cAEfwB,eACEC,MAAO,cAET1L,SAMEsF,YAAA,mBAAY,SAASC,GACnB,MAAOA,GAAiBI,wBAI7B4F,MAAM,cACLjM,IAAK,mCACLoD,YAAa,0BACbhE,WAAY,iBACZyG,aAAc,iBACd6F,MAAM,EACN9M,MACEsN,MAAM,EACNvB,YAAa,SAEfwB,eACEI,OAAQ,kBACRH,MAAO,SAET1L,SAOES,OAAA,eAAA,cAAO,SAAS0F,EAAclJ,GAC5B,MAAOA,GAAY8B,UACjB/B,UAAWmJ,EAAaxF,gBACvB5C,KAAK,SAASC,GACf,MAAOA,GAASE,aAGpByC,eAAA,eAAe,SAASwF,GACtB,MAAOA,GAAaxF,mBAIzB4K,MAAM,wBACLjM,IAAK,qBACL0L,MAAM,EACNc,OACEC,SACErJ,YAAa,kCACbhE,WAAY,qBACZyG,aAAc,uBAGlBjH,MACEsN,MAAM,EACNvB,YAAa,aAEfwB,eACEC,MAAO,aAET1L,SAOEwE,WAAA,eAAA,kBAAW,SAAS2B,EAAcrC,GAChC,MAAOA,GAAgBI,cACrBlH,UAAWmJ,EAAaxF,cACxB1B,OAAQkH,EAAalH,SACpBlB,KAAK,SAASC,GACf,MAAOA,GAASE,aAGpBe,QAAA,eAAQ,SAASkH,GACf,MAAOA,GAAalH,SAEtB0B,eAAA,eAAe,SAASwF,GACtB,MAAOA,GAAaxF,mBAK5B2K,EAAmBU,UAAU,oBAzH/BZ,EAAa3M,SAAW,iBAAkB,sBAnB1C5B,QACGC,OAAO,4BACPmP,OAAOb,MAgJZ,WACE,YAEAvO,SACGC,OAAO,4BACPoP,SAAS,WAAYnF,UACrBmF,SAAS,IAAKrN,GACdqN,SAAS,aAAc,qCACvBA,SAAS,UAAWC,SACpBD,SAAS,SAAUE,QACnBF,SAAS,SAAU9O,WAGxB,WACE,YAOA,SAAS6O,GAAOI,EAAcC,GAE5BD,EAAaE,cAAa,GAG1BD,EAAaE,WAAY,EACzBF,EAAaG,QAAU,IACvBH,EAAaI,cAAgB,kBAC7BJ,EAAaK,mBAAoB,EACjCL,EAAaM,aAAc,EAM7BX,EAAOxN,SAAW,eAAgB,gBApBlC5B,QACGC,OAAO,4BACPmP,OAAOA,GAeVpP,QAAQC,OAAO,kDAAmDqO,KAAK,iBAAkB,SAAS0B,GAChGA,EAAetC,IAAI,8CACjB,wvBAYN1N,QAAQC,OAAO,4BAA4BqO,KAAK,iBAAkB,SAAS0B,GAAiBA,EAAetC,IAAI,qBAAqB,uIACpIsC,EAAetC,IAAI,oCAAoC,smBACvDsC,EAAetC,IAAI,oCAAoC,2kDACvDsC,EAAetC,IAAI,0CAA0C,84BAC7DsC,EAAetC,IAAI,4BAA4B,k7BAC/CsC,EAAetC,IAAI,uCAAuC,+sCAC1DsC,EAAetC,IAAI,0BAA0B,0mDAC7CsC,EAAetC,IAAI,gCAAgC,ykCACnDsC,EAAetC,IAAI,kCAAkC,qoDACrDsC,EAAetC,IAAI,wCAAwC","file":"scripts/app-32aacc17a2.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge', ['angular-intro', 'ncy-angular-breadcrumb', 'ui.grid', 'ui.grid.grouping', 'ui.grid.selection', 'ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ui.router', 'ui.bootstrap', 'toastr']);\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('UserModalController', UserModalController);\r\n\r\n  /** @ngInject */\r\n  function UserModalController(candidate, UserFactory, $uibModalInstance, $log, toastr) {\r\n    var vm = this;\r\n    vm.formOptions = {\r\n      name: '',\r\n      email: '',\r\n      candidate: candidate\r\n    };\r\n\r\n    vm.loading = false;\r\n    vm.success = undefined;\r\n    vm.errorMessage = '';\r\n\r\n\t\t/**\r\n     * Create the user\r\n     */\r\n    vm.createUser = function createUser() {\r\n      vm.loading = true;\r\n      vm.success = undefined;\r\n      UserFactory.createUser(vm.formOptions)\r\n        .then(\r\n          function(response) {\r\n            vm.loading = false;\r\n            if (response.success) {\r\n              var createdUser = response.data;\r\n              $log.info('Created new user');\r\n              $log.info(createdUser);\r\n              vm.success = true;\r\n              toastr.success('Successfully created user ' + vm.formOptions.name);\r\n              vm.close(createdUser);\r\n            } else {\r\n              $log.error(response);\r\n              vm.errorMessage = response.message;\r\n              vm.success = false;\r\n              vm.loading = false;\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n\t\t/**\r\n     * Check if form is valid and ready to submit\r\n     * @returns {string|boolean}\r\n     */\r\n    vm.isValid = function() {\r\n      return vm.formOptions.name && vm.formOptions.email && !vm.loading;\r\n    };\r\n\r\n\t\t/**\r\n     * Close the modal\r\n     */\r\n    vm.close = function(createdUser) {\r\n      if (!createdUser) {\r\n        $uibModalInstance.dismiss('cancel');\r\n      } else {\r\n        $uibModalInstance.close(createdUser);\r\n      }\r\n    };\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('UserFactory', UserFactory);\r\n\r\n  /** @ngInject */\r\n\t/**\r\n   * Factory to handle all CRUD operations for users\r\n   * @param RestFactory\r\n   * @param apiBaseUrl\r\n   * @param _\r\n   * @param $q\r\n   * @returns {{createUser: createUser, getAllCandidates: getAllCandidates, getUsers: getUsers}}\r\n   * @constructor\r\n\t */\r\n  function UserFactory(RestFactory, apiBaseUrl, _, $q) {\r\n    var userUrl = apiBaseUrl + 'user';\r\n\r\n\t\t/**\r\n     * Get users for a given candidate\r\n     * @param {{}} parameters The parameters object\r\n     * @param {String} parameters.candidate The candidate to make the request for\r\n     * @param {String | Integer=} parameters.userId The user ID to make the request for\r\n     * @returns {Promise}\r\n     */\r\n    function getUsers(parameters) {\r\n      var candidate = parameters.candidate;\r\n      var userId = parameters.userId;\r\n      var localUrl = userUrl;\r\n      if (angular.isDefined(userId)) {\r\n        localUrl += '/' + userId;\r\n      }\r\n      return RestFactory.makeRequest({\r\n        url: localUrl,\r\n        method: 'GET',\r\n        params: {\r\n          candidate: candidate\r\n        }\r\n      });\r\n    }\r\n\r\n\t\t/**\r\n     * Create a new user\r\n     * @param {{}} parameters Request parameters\r\n     * @param {String} parameters.name The new user's name\r\n     * @param {String} parameters.email The new user's email\r\n     * @param {String} parameters.candidate The candidate to make the request for\r\n     * @returns {Promise} which will resolve to the data for the new user if successful, empty array if not\r\n     */\r\n    function createUser(parameters) {\r\n      var valid = true;\r\n      var requiredParams = ['name', 'email', 'candidate'];\r\n      _.forEach(requiredParams, function(p) {\r\n        if (!parameters.hasOwnProperty(p)) {\r\n          valid = false;\r\n        }\r\n      });\r\n      if (!valid) {\r\n        var dfd = $q.defer();\r\n        dfd.resolve({\r\n          success: false,\r\n          data: [],\r\n          status: 'Parameters were not specified',\r\n          message: 'Parameters were not specified'\r\n        });\r\n        return dfd.promise();\r\n      }\r\n      return RestFactory.makeRequest({\r\n        url: userUrl,\r\n        method: 'POST',\r\n        data: parameters\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Delete a user and their associated transfers\r\n     * @param {{}} parameters Request parameters\r\n     * @param {String} parameters.userId\r\n     * @returns {Promise}\r\n     */\r\n    function deleteUser(parameters) {\r\n      return RestFactory.makeRequest({\r\n        url: userUrl + '/' + parameters.userId,\r\n        method: 'DELETE',\r\n        params: parameters\r\n      });\r\n    }\r\n\r\n    return {\r\n      createUser: createUser,\r\n      deleteUser: deleteUser,\r\n      getUsers: getUsers\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('UserDeleteModalController', UserDeleteModalController);\r\n\r\n  /** @ngInject */\r\n  function UserDeleteModalController(user, UserFactory, $uibModalInstance, $log, toastr) {\r\n    var vm = this;\r\n    vm.formOptions = {\r\n      userId: user.id,\r\n      name: user.name,\r\n      email: user.email,\r\n      candidate: user.candidate\r\n    };\r\n\r\n    vm.loading = false;\r\n    vm.success = undefined;\r\n    vm.errorMessage = '';\r\n\r\n    /**\r\n     * Create the user\r\n     */\r\n    vm.deleteUser = function deleteUser() {\r\n      vm.loading = true;\r\n      vm.success = undefined;\r\n      UserFactory.deleteUser(vm.formOptions).then(\r\n          function(response) {\r\n            vm.loading = false;\r\n            if (response.success) {\r\n              $log.info('Deleted user');\r\n              vm.success = true;\r\n              toastr.info('Successfully deleted user ' + vm.formOptions.name);\r\n              vm.close(true);\r\n            } else {\r\n              $log.error(response);\r\n              vm.errorMessage = response.message;\r\n              vm.success = false;\r\n              vm.loading = false;\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    vm.close = function(createdUser) {\r\n      if (!createdUser) {\r\n        $uibModalInstance.dismiss('cancel');\r\n      } else {\r\n        $uibModalInstance.close(createdUser);\r\n      }\r\n    };\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('UserController', UserController);\r\n\r\n  /** @ngInject */\r\n  function UserController(users, $state, candidateName, $uibModal, $log, uiGridConstants, _) {\r\n    var vm = this;\r\n    vm.users = users;\r\n    vm.candidateName = candidateName;\r\n    vm.selectedUser = undefined;\r\n\r\n    vm.introOptions = {\r\n      steps: [\r\n        {\r\n          intro: 'This is the user screen. Here, you can look through and add user data for a candidate and take actions on specific users.'\r\n        },\r\n        {\r\n          intro: 'Use the table to search, sort, group and aggregate users. The icons on the table headers help you access these functions. Select a user by clicking on the specific row.',\r\n          element: '#user-table-container'\r\n        },\r\n        {\r\n          intro: 'You can take user-specific actions from this row. Add a user at any time, and select a user to view their transactios or delete them.',\r\n          element: '#user-action-button-row'\r\n        }\r\n      ]\r\n    };\r\n\r\n    /**\r\n     * UI Grid options for the user table\r\n     * @type {{data: [], enableFiltering: boolean, enableRowSelection: boolean, enableFullRowSelection: boolean}}\r\n     */\r\n    vm.gridOptions = {\r\n      data: vm.users,\r\n      enableFiltering: true,\r\n      enableRowSelection: true,\r\n      enableFullRowSelection: true,\r\n      enableHorizontalScrollbar: uiGridConstants.scrollbars.NEVER,\r\n      enableVerticalScrollbar: uiGridConstants.scrollbars.WHEN_NEEDED,\r\n      multiSelect: false, //one user at a time\r\n      onRegisterApi: function(api) {\r\n        vm.gridApi = api;\r\n        vm.gridApi.selection.on.rowSelectionChanged(null, function(row) {\r\n          vm.selectedUser = undefined;\r\n          if (row.isSelected) {\r\n            vm.selectedUser = row.entity;\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n\t\t/**\r\n     * Open modal to add a user\r\n     */\r\n    vm.addUser = function addUser() {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: 'app/main/user/user.modal.html',\r\n        controller: 'UserModalController as userModal',\r\n        resolve: {\r\n          candidate: function () {\r\n            return vm.candidateName;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function (createdUser) {\r\n        vm.users.unshift(createdUser);\r\n        if (vm.gridApi) {\r\n          vm.gridApi.grid.modifyRows(vm.gridOptions.data);\r\n          vm.gridApi.selection.clearSelectedRows();\r\n          vm.gridApi.selection.selectRow(vm.gridOptions.data[0]);\r\n        }\r\n      }, function () {\r\n        $log.info('Modal dismissed at: ' + new Date());\r\n      });\r\n    };\r\n\r\n    /**\r\n     * Delete a user - confirm with modal\r\n     */\r\n    vm.deleteUser = function deleteUser() {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: 'app/main/user/user.delete.modal.html',\r\n        controller: 'UserDeleteModalController as userDeleteModal',\r\n        resolve: {\r\n          user: function() {\r\n            return vm.selectedUser;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function () {\r\n        var indexToDelete = _.findIndex(vm.users, function(u) {\r\n          return u.id === vm.selectedUser.id\r\n        });\r\n        if (indexToDelete >= 0) {\r\n          vm.users.splice(indexToDelete, 1);\r\n        }\r\n        if (vm.gridApi) {\r\n          vm.gridApi.grid.modifyRows(vm.gridOptions.data);\r\n          vm.gridApi.selection.clearSelectedRows();\r\n        }\r\n      }, function () {\r\n        $log.info('Modal dismissed at: ' + new Date());\r\n      });\r\n    };\r\n\r\n    vm.viewTransfers = function viewTransfers() {\r\n      $state.transitionTo('main.users.transfers', {candidateName: vm.candidateName, userId: vm.selectedUser.id});\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('LoginController', LoginController);\r\n\r\n  /** @ngInject */\r\n  function LoginController(AuthenticationFactory, $state) {\r\n    var vm = this;\r\n    AuthenticationFactory.logOut();\r\n    vm.formOptions = {\r\n      user: 'admin',\r\n      pass: ''\r\n    };\r\n\r\n    vm.success = undefined;\r\n    vm.errorMessage = 'Incorrect username and password. Please try again.';\r\n\r\n    /**\r\n     * Log the user in!\r\n     */\r\n    vm.logIn = function logIn() {\r\n      vm.success = undefined;\r\n      if (AuthenticationFactory.logIn(vm.formOptions.user, vm.formOptions.pass)) {\r\n        vm.success = true;\r\n        $state.transitionTo('main.candidates');\r\n      } else {\r\n        vm.success = false;\r\n      }\r\n    };\r\n\r\n    /**\r\n     * Truthy check for form validity\r\n     * @returns {string|string}\r\n     */\r\n    vm.isValid = function isValid() {\r\n      return vm.formOptions.user && vm.formOptions.pass;\r\n    };\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('TransferModalController', TransferModalController);\r\n\r\n  /** @ngInject */\r\n  function TransferModalController(candidate, userId, TransferFactory, $uibModalInstance, $log) {\r\n    var vm = this;\r\n    vm.formOptions = {\r\n      amount: 1,\r\n      candidate: candidate,\r\n      userId: userId\r\n    };\r\n\r\n    vm.loading = false;\r\n    vm.success = undefined;\r\n    vm.errorMessage = '';\r\n\r\n    /**\r\n     * Create the transfer\r\n     */\r\n    vm.createTransfer = function createTransfer() {\r\n      vm.loading = true;\r\n      vm.success = undefined;\r\n      TransferFactory.createTransfer(vm.formOptions)\r\n        .then(\r\n          function(response) {\r\n            var createdTransfer = response.data;\r\n            $log.info('Created new transfer');\r\n            $log.info(createdTransfer);\r\n            vm.success = true;\r\n            vm.close(createdTransfer);\r\n          },\r\n          function(response) {\r\n            $log.error('Could not create transfer');\r\n            vm.success = false;\r\n            vm.errorMessage = response.message;\r\n          }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Check if form is valid and ready to submit\r\n     * @returns {string|boolean}\r\n     */\r\n    vm.isValid = function() {\r\n      return vm.formOptions.amount && vm.formOptions.userId && !vm.loading;\r\n    };\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    vm.close = function(createdTransfer) {\r\n      if (!createdTransfer) {\r\n        $uibModalInstance.dismiss('cancel');\r\n      } else {\r\n        $uibModalInstance.close(createdTransfer);\r\n      }\r\n    };\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('TransferFactory', TransferFactory);\r\n\r\n  /** @ngInject */\r\n\t/**\r\n   * Factory to handle all CRUD operations for transfers\r\n   * @param RestFactory\r\n   * @param apiBaseUrl\r\n   * @param _\r\n   * @param $q\r\n   * @returns {{getTransfers: getTransfers, createTransfer: createTransfer}}\r\n   * @constructor\r\n\t */\r\n  function TransferFactory(RestFactory, apiBaseUrl, _, $q) {\r\n    var transferUrl = apiBaseUrl + 'transfer';\r\n    var userTransferUrlBase = apiBaseUrl + 'user/';\r\n\r\n\t\t/**\r\n     * Get transfers either through user ID or transfer ID\r\n     * @param {{}} parameters\r\n     * @param {String} parameters.candidate The candidate to make the request for\r\n     * @param {String=} parameters.id The transfer id\r\n     * @param {String=} parameters.userId The user id to get all transfers for\r\n     * @returns {Promise} Resolves to array of data if successful, empty if not\r\n     */\r\n    function getTransfers(parameters) {\r\n      var candidate = parameters.candidate;\r\n      var url = transferUrl;\r\n      if (parameters.hasOwnProperty('id')) {\r\n        url += '/' + parameters.id;\r\n      } else if (parameters.hasOwnProperty('userId')) {\r\n        url = userTransferUrlBase + parameters.userId + '/transfers'\r\n      }\r\n      return RestFactory.makeRequest({\r\n        url: url,\r\n        method: 'GET',\r\n        params: {\r\n          candidate: candidate\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Create a new transfer\r\n     * @param {{}} parameters Request parameters\r\n     * @param {String} parameters.amount Transfer amount\r\n     * @param {String} parameters.userId The user id\r\n     * @param {String} parameters.candidate The candidate to make the request for\r\n     * @returns {Promise} which will resolve to the data for the new transfer if successful, empty array if not\r\n     */\r\n    function createTransfer(parameters) {\r\n      var valid = true;\r\n      var requiredParams = ['amount', 'userId', 'candidate'];\r\n      var underscoreParams = {};\r\n      _.forEach(requiredParams, function(p) {\r\n        if (!parameters.hasOwnProperty(p)) {\r\n          valid = false;\r\n        } else {\r\n          underscoreParams[_.snakeCase(p)] = parameters[p]; //to underscore case since that's how the API accepts it\r\n        }\r\n      });\r\n      if (!valid) {\r\n        var dfd = $q.defer();\r\n        dfd.resolve([]);\r\n        return dfd.promise;\r\n      }\r\n\r\n      return RestFactory.makeRequest({\r\n        url: transferUrl,\r\n        method: 'POST',\r\n        data: underscoreParams\r\n      });\r\n    }\r\n\r\n    return {\r\n      getTransfers: getTransfers,\r\n      createTransfer: createTransfer\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('TransferController', TransferController);\r\n\r\n  /** @ngInject */\r\n  function TransferController(transfers, $uibModal, userId, candidateName, $log, toastr) {\r\n    var vm = this;\r\n    vm.transfers = transfers;\r\n    vm.userId = userId;\r\n    vm.candidateName = candidateName;\r\n\r\n    vm.introOptions = {\r\n      steps: [\r\n        {\r\n          intro: 'This is the transfer screen. Here, you can look through and add transfer data for a user.'\r\n        },\r\n        {\r\n          intro: 'You can add transfers from this row at any time. If the current user doesn\\'t have transfers, start here!',\r\n          element: '#transfer-action-button-row'\r\n        },\r\n        {\r\n          intro: 'Once you have transfers for a user, they are tabulated here. You can Use the table to search, sort, group and aggregate transfers. The icons on the table headers help you access these functions.',\r\n          element: '#transfer-table-container'\r\n        }\r\n      ]\r\n    };\r\n\r\n    /**\r\n     * UI Grid options for the user table\r\n     * @type {{data: [], enableFiltering: boolean, enableRowSelection: boolean, enableFullRowSelection: boolean}}\r\n     */\r\n    vm.gridOptions = {\r\n      data: vm.transfers,\r\n      enableFiltering: true,\r\n      enableRowSelection: false,\r\n      enableFullRowSelection: false\r\n    };\r\n\r\n\r\n    /**\r\n     * Open modal to add a transfer\r\n     */\r\n    vm.addTransfer = function addTransfer() {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: 'app/main/transfer/transfer.modal.html',\r\n        controller: 'TransferModalController as transferModal',\r\n        resolve: {\r\n          candidate: function () {\r\n            return vm.candidateName;\r\n          },\r\n          userId: function () {\r\n            return vm.userId;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function (createdTransfer) {\r\n        if (!createdTransfer.hasOwnProperty('candidate')) {\r\n          createdTransfer.candidate = vm.candidateName;\r\n        }\r\n        toastr.success('Successfully created new transfer!');\r\n        vm.transfers.push(createdTransfer);\r\n      }, function () {\r\n        $log.info('Modal dismissed at: ' + new Date());\r\n      });\r\n    };\r\n\r\n  }\r\n})();\r\n\n(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .directive('acmeNavbar', acmeNavbar);\r\n\r\n  /** @ngInject */\r\n  function acmeNavbar() {\r\n    var directive = {\r\n      restrict: 'E',\r\n      templateUrl: 'app/components/navbar/navbar.html',\r\n      scope: {\r\n        creationDate: '='\r\n      },\r\n      controller: NavbarController,\r\n      controllerAs: 'vm',\r\n      bindToController: true\r\n    };\r\n\r\n    return directive;\r\n\r\n    /** @ngInject */\r\n    function NavbarController(AuthenticationFactory) {\r\n      var vm = this;\r\n      vm.isLoggedIn = AuthenticationFactory.isLoggedIn;\r\n      vm.logout = AuthenticationFactory.logout;\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('CandidateModalController', CandidateModalController);\r\n\r\n  /** @ngInject */\r\n  function CandidateModalController(candidates, CandidateFactory, $uibModalInstance, $log, toastr) {\r\n    var vm = this;\r\n    vm.candidates = candidates;\r\n    vm.formOptions = {\r\n      candidate: 'YourCandidate'\r\n    };\r\n\r\n    vm.loading = false;\r\n    vm.success = undefined;\r\n    vm.errorMessage = '';\r\n\r\n    /**\r\n     * Create the user\r\n     */\r\n    vm.createCandidate = function createCandidate() {\r\n      vm.loading = true;\r\n      vm.success = undefined;\r\n      if (vm.candidates.indexOf(vm.formOptions.candidate) >= 0) {\r\n        vm.success = false;\r\n        vm.errorMessage = 'Candidate already exists';\r\n        vm.loading = false;\r\n      }\r\n      CandidateFactory.createCandidate(vm.formOptions.candidate)\r\n        .then(\r\n          function(response) {\r\n            vm.loading = false;\r\n            if (response.success) {\r\n              var createdCandidate = response.data;\r\n              $log.info('Created new candidate');\r\n              $log.info(createdCandidate);\r\n              vm.success = true;\r\n              toastr.success('Successfully created candidate ' + vm.formOptions.candidate);\r\n              vm.close(createdCandidate.candidate);\r\n            } else {\r\n              $log.error(response);\r\n              vm.errorMessage = response.message;\r\n              vm.success = false;\r\n              vm.loading = false;\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Check if form is valid and ready to submit\r\n     * @returns {string|boolean}\r\n     */\r\n    vm.isValid = function() {\r\n      return vm.formOptions.candidate && !vm.loading;\r\n    };\r\n\r\n    /**\r\n     * Close the modal\r\n     */\r\n    vm.close = function(createdCandidate) {\r\n      if (!createdCandidate) {\r\n        $uibModalInstance.dismiss('cancel');\r\n      } else {\r\n        $uibModalInstance.close(createdCandidate);\r\n      }\r\n    };\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('CandidateFactory', CandidateFactory);\r\n\r\n  /** @ngInject */\r\n\r\n\t/**\r\n   * Factory to handle all CRUD operations for candidates\r\n   * @param UserFactory\r\n   * @param _\r\n   * @returns {{getAllCandidates: getAllCandidates}}\r\n   * @constructor\r\n\t */\r\n  function CandidateFactory(UserFactory,  _) {\r\n\r\n    /**\r\n     * Get all possible candidates\r\n     * @returns {Promise} A promise which resolves to an array of strings, each representing a unique candidate\r\n     */\r\n    function getAllCandidates() {\r\n      return UserFactory.getUsers({candidate: 'FULLSTACK'}).then(function(response) {\r\n        var allData = response.data;\r\n        return _.chain(allData).map('candidate').uniq().value();\r\n      });\r\n    }\r\n\r\n\t\t/**\r\n     * 'Create' a new candidate by creating an 'Admin' user with that candidate name\r\n     * @param {String} candidateName The candidate to make the request for\r\n     * @returns {Promise} which will resolve to the data for the new user if successful, empty array if not\r\n     * @returns {Promise}\r\n     */\r\n    function createCandidate(candidateName) {\r\n      candidateName = candidateName.replace(/\\s+/, '');\r\n      var parameters = {\r\n        candidate: candidateName,\r\n        name: 'Admin',\r\n        email: 'admin@' + candidateName + '.com'\r\n      };\r\n      return UserFactory.createUser(parameters); //takes care of errors through underlying RestFactory\r\n    }\r\n\r\n    return {\r\n      getAllCandidates: getAllCandidates,\r\n      createCandidate: createCandidate\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .controller('CandidateController', CandidateController);\r\n\r\n  /** @ngInject */\r\n  function CandidateController(candidates, $state, $stateParams, $uibModal, $log) {\r\n    var vm = this;\r\n    vm.candidates = candidates;\r\n    initializeCandidate();\r\n\r\n    vm.introOptions = {\r\n      steps: [\r\n        {\r\n          intro: 'Welcome to the Admin Dashboard. With this application you can manage all your candidates, users and transfers!'\r\n        },\r\n        {\r\n          intro: 'Start by selecting a candidate. Once selected, hit enter or the Go! button.',\r\n          element: '#selectCandidate'\r\n        },\r\n        {\r\n          intro: 'You can use this row to move forward with the selected candidate using Go!, or start with a fresh new namespace by creating a candidate',\r\n          element: '#candidate-action-button-row'\r\n        }\r\n      ]\r\n    };\r\n\r\n\t\t/**\r\n     * On selection, update URL with the selected candidate\r\n     * Else, remove selection\r\n     */\r\n    vm.onSelect = function onSelect() {\r\n      if (candidates.indexOf(vm.candidateName) >= 0) {\r\n        $state.transitionTo('main.candidates', {candidateName: vm.candidateName}, {notify: false});\r\n      } else {\r\n        vm.candidateName = '';\r\n      }\r\n    };\r\n\r\n\t\t/**\r\n     * Submit candidate name\r\n     */\r\n    vm.onSubmit = function onSubmit() {\r\n      $state.transitionTo('main.users', {candidateName: vm.candidateName});\r\n    };\r\n\r\n    /**\r\n     * Candidate creation via modal\r\n     */\r\n    vm.createCandidate = function createCandidate() {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: 'app/main/candidate/candidate.modal.html',\r\n        controller: 'CandidateModalController as candidateModal',\r\n        resolve: {\r\n          candidates: function() {\r\n            return vm.candidates;\r\n          }\r\n        }\r\n      });\r\n\r\n      modalInstance.result.then(function (createdCandidate) {\r\n        vm.candidates.push(createdCandidate);\r\n        vm.candidateName = createdCandidate;\r\n      }, function () {\r\n        $log.info('Modal dismissed at: ' + new Date());\r\n      });\r\n    };\r\n\r\n\t\t/**\r\n     * Initialize or set candidate\r\n     */\r\n    function initializeCandidate(){\r\n      if ($stateParams.candidateName && (candidates.indexOf($stateParams.candidateName) >= 0)) {\r\n        vm.candidateName = $stateParams.candidateName;\r\n      }\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n      .module('fullStackCodingChallenge')\r\n      .service('webDevTec', webDevTec);\r\n\r\n  /** @ngInject */\r\n  function webDevTec() {\r\n    var data = [\r\n      {\r\n        'title': 'AngularJS',\r\n        'url': 'https://angularjs.org/',\r\n        'description': 'HTML enhanced for web apps!',\r\n        'logo': 'angular.png'\r\n      },\r\n      {\r\n        'title': 'BrowserSync',\r\n        'url': 'http://browsersync.io/',\r\n        'description': 'Time-saving synchronised browser testing.',\r\n        'logo': 'browsersync.png'\r\n      },\r\n      {\r\n        'title': 'GulpJS',\r\n        'url': 'http://gulpjs.com/',\r\n        'description': 'The streaming build system.',\r\n        'logo': 'gulp.png'\r\n      },\r\n      {\r\n        'title': 'Jasmine',\r\n        'url': 'http://jasmine.github.io/',\r\n        'description': 'Behavior-Driven JavaScript.',\r\n        'logo': 'jasmine.png'\r\n      },\r\n      {\r\n        'title': 'Karma',\r\n        'url': 'http://karma-runner.github.io/',\r\n        'description': 'Spectacular Test Runner for JavaScript.',\r\n        'logo': 'karma.png'\r\n      },\r\n      {\r\n        'title': 'Protractor',\r\n        'url': 'https://github.com/angular/protractor',\r\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\r\n        'logo': 'protractor.png'\r\n      },\r\n      {\r\n        'title': 'Bootstrap',\r\n        'url': 'http://getbootstrap.com/',\r\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\r\n        'logo': 'bootstrap.png'\r\n      },\r\n      {\r\n        'title': 'Angular UI Bootstrap',\r\n        'url': 'http://angular-ui.github.io/bootstrap/',\r\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\r\n        'logo': 'ui-bootstrap.png'\r\n      },\r\n      {\r\n        'title': 'Stylus',\r\n        'url': 'http://learnboost.github.io/stylus/',\r\n        'description': 'Stylus is a revolutionary new language, providing an efficient, dynamic, and expressive way to generate CSS. Supporting both an indented syntax and regular CSS style.',\r\n        'logo': 'stylus.png'\r\n      }\r\n    ];\r\n\r\n    this.getTec = getTec;\r\n\r\n    function getTec() {\r\n      return data;\r\n    }\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .directive('acmeMalarkey', acmeMalarkey);\r\n\r\n  /** @ngInject */\r\n  function acmeMalarkey(malarkey) {\r\n    var directive = {\r\n      restrict: 'E',\r\n      scope: {\r\n        extraValues: '='\r\n      },\r\n      template: '&nbsp;',\r\n      link: linkFunc,\r\n      controller: MalarkeyController,\r\n      controllerAs: 'vm'\r\n    };\r\n\r\n    return directive;\r\n\r\n    function linkFunc(scope, el, attr, vm) {\r\n      var watcher;\r\n      var typist = malarkey(el[0], {\r\n        typeSpeed: 40,\r\n        deleteSpeed: 40,\r\n        pauseDelay: 800,\r\n        loop: true,\r\n        postfix: ' '\r\n      });\r\n\r\n      el.addClass('acme-malarkey');\r\n\r\n      angular.forEach(scope.extraValues, function(value) {\r\n        typist.type(value).pause().delete();\r\n      });\r\n\r\n      watcher = scope.$watch('vm.contributors', function() {\r\n        angular.forEach(vm.contributors, function(contributor) {\r\n          typist.type(contributor.login).pause().delete();\r\n        });\r\n      });\r\n\r\n      scope.$on('$destroy', function () {\r\n        watcher();\r\n      });\r\n    }\r\n\r\n    /** @ngInject */\r\n    function MalarkeyController($log, githubContributor) {\r\n      var vm = this;\r\n\r\n      vm.contributors = [];\r\n\r\n      activate();\r\n\r\n      function activate() {\r\n        return getContributors().then(function() {\r\n          $log.info('Activated Contributors View');\r\n        });\r\n      }\r\n\r\n      function getContributors() {\r\n        return githubContributor.getContributors(10).then(function(data) {\r\n          vm.contributors = data;\r\n\r\n          return vm.contributors;\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('githubContributor', githubContributor);\r\n\r\n  /** @ngInject */\r\n  function githubContributor($log, $http) {\r\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\r\n\r\n    var service = {\r\n      apiHost: apiHost,\r\n      getContributors: getContributors\r\n    };\r\n\r\n    return service;\r\n\r\n    function getContributors(limit) {\r\n      if (!limit) {\r\n        limit = 30;\r\n      }\r\n\r\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\r\n        .then(getContributorsComplete)\r\n        .catch(getContributorsFailed);\r\n\r\n      function getContributorsComplete(response) {\r\n        return response.data;\r\n      }\r\n\r\n      function getContributorsFailed(error) {\r\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\r\n      }\r\n    }\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('RestFactory', RestFactory);\r\n\r\n  /** @ngInject */\r\n\t/**\r\n   * The factory which provides an interface to the CRUD methods via the REST API\r\n   * @param $http\r\n   * @param $log\r\n   * @returns {{makeRequest: makeRequest}}\r\n   * @constructor\r\n\t */\r\n  function RestFactory($http, $log, toastr) {\r\n    //set up correct content type\r\n    $http.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\r\n\r\n\t\t/**\r\n     * Make an http request\r\n     * @param {{}} parameters The url parameters\r\n     * @param {String} parameters.method GET or POST\r\n     * @param {String} parameters.url The url to call\r\n     * @param {{}=} parameters.params Additional options for a GET method\r\n     * @param {{}=} parameters.data Additional data for a POST method\r\n     * @returns {Promise} A promise which will resolve to an array of data if successful, or resolve to an empty array log an error\r\n     */\r\n    function makeRequest(parameters) {\r\n      var requestObject = {\r\n        method: parameters.method || 'GET',\r\n        url: parameters.url\r\n      };\r\n\r\n      if ((requestObject.method === 'POST') && (parameters.hasOwnProperty('data'))) {\r\n        requestObject.data = angular.toJson(parameters.data);\r\n      } else { //GET or DELETE\r\n        requestObject.params = parameters.params;\r\n      }\r\n      return $http(requestObject).then(_successHandler, _failureHandler);\r\n    }\r\n\r\n    /**\r\n     * AJAX success handler\r\n     * @param {Object} urlResponse The response from the Url\r\n     * @returns {{success: boolean, data: *}}\r\n     * @private\r\n     */\r\n    function _successHandler(urlResponse) {\r\n      return {\r\n        success: true,\r\n        data: urlResponse.data\r\n      };\r\n    }\r\n\r\n    /**\r\n     * AJAX error handler\r\n     * @param {Object} failureResponse The error data\r\n     * @returns {{success: boolean, data: *}}\r\n     * @private\r\n     */\r\n    function _failureHandler(failureResponse) {\r\n      $log.error(failureResponse);\r\n      toastr.error('Could not reach the server!');\r\n      return {\r\n        success: false,\r\n        data: [],\r\n        status: failureResponse.statusText,\r\n        message: failureResponse.data\r\n      };\r\n    }\r\n\r\n    return {\r\n      makeRequest: makeRequest\r\n    };\r\n  }\r\n\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('fullStackCodingChallenge')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController() {\n    //hold logic for anything shared in the app, should the need arise\n  }\n})();\n\n(function() {\r\n  'use strict';\r\n  //functions as central data store of the app\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('AppInfo', AppInfo);\r\n\r\n  /** @ngInject */\r\n  function AppInfo(Store) {\r\n    var possibleStates = [\r\n      {\r\n        to: 'candidate',\r\n        displayName: 'Candidate',\r\n        accessible: function() {\r\n          return true;\r\n        }\r\n      },\r\n      {\r\n        to: 'users',\r\n        displayName: 'Users',\r\n        accessible: function() {\r\n          return Store.getProperty('candidate') !== null;\r\n        }\r\n      },\r\n      {\r\n        to: 'transfers',\r\n        displayName: 'Transfers',\r\n        accessible: function() {\r\n          return Store.getProperty('user') !== null;\r\n        }\r\n      }\r\n    ];\r\n\r\n    var currentState = 0;\r\n\r\n    function setState(stateIndex) {\r\n      currentState = stateIndex;\r\n    }\r\n\r\n    return {\r\n      possibleStates: possibleStates,\r\n      currentState: currentState,\r\n      setState: setState\r\n    };\r\n  }\r\n\r\n})();\r\n\n//http://www.seanmarchetti.com/authentication_with_angularui_router.html\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .factory('AuthenticationFactory', AuthenticationFactory);\r\n\r\n  /** @ngInject */\r\n  function AuthenticationFactory($cookies) {\r\n    var loggedIn = false;\r\n    var allowedCredentials = {\r\n      user: 'admin',\r\n      pass: 'admin'\r\n    };\r\n\r\n    /**\r\n     * Log in with username and password\r\n     * @param {String} user\r\n     * @param {String} pass\r\n     * @returns {boolean}\r\n     */\r\n    function logIn(user, pass) {\r\n      if (user === allowedCredentials.user && pass === allowedCredentials.pass) {\r\n        loggedIn = true;\r\n        $cookies.put('login', 'true');\r\n      } else {\r\n        logOut();\r\n      }\r\n      return loggedIn;\r\n    }\r\n\r\n    /**\r\n     * Check if logged in\r\n     * @returns {boolean}\r\n     */\r\n    function isLoggedIn() {\r\n      return $cookies.get('login') || loggedIn;\r\n    }\r\n\r\n    /**\r\n     * Log out\r\n     */\r\n    function logOut() {\r\n      loggedIn = false;\r\n      $cookies.remove('login');\r\n    }\r\n\r\n    return {\r\n      logIn: logIn,\r\n      isLoggedIn: isLoggedIn,\r\n      logOut: logOut\r\n    };\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock($log, $rootScope, $state, AuthenticationFactory) {\r\n    $rootScope.$on(\"$stateChangeStart\",\r\n      function(event, toState, toParams, fromState, fromParams) {\r\n        if (!(toState.auth && AuthenticationFactory.isLoggedIn())) {\r\n          //not logged in\r\n          $state.transitionTo(\"main.login\");\r\n          event.preventDefault();\r\n        }\r\n      });\r\n    $log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .config(routerConfig);\r\n\r\n  /** @ngInject */\r\n\t/**\r\n   * Configure the app routes\r\n   * @param $stateProvider\r\n   * @param $urlRouterProvider\r\n   */\r\n  function routerConfig($stateProvider, $urlRouterProvider) {\r\n    $stateProvider\r\n      .state('main', {\r\n        url: '/main',\r\n        auth: false,\r\n        templateUrl: 'app/main/main.html',\r\n        controller: 'MainController',\r\n        controllerAs: 'mainController',\r\n        data: {\r\n          root: true\r\n        },\r\n        ncyBreadcrumb: {\r\n          label: 'Main',\r\n          skip: true\r\n        }\r\n      })\r\n      .state('main.login', {\r\n        url: '/login',\r\n        templateUrl: 'app/main/login/login.html',\r\n        controller: 'LoginController',\r\n        controllerAs: 'loginController',\r\n        auth: false,\r\n        data: {\r\n          root: false\r\n        },\r\n        ncyBreadcrumb: {\r\n          label: 'Login'\r\n        }\r\n      })\r\n      .state('main.candidates', {\r\n        url: '/candidates/:candidateName',\r\n        auth: true,\r\n        params: {\r\n          candidateName: {value: null, squash: true}\r\n        },\r\n        templateUrl: 'app/main/candidate/candidate.html',\r\n        controller: 'CandidateController',\r\n        controllerAs: 'candidateController',\r\n        data: {\r\n          root: false,\r\n          displayName: 'Candidates'\r\n        },\r\n        ncyBreadcrumb: {\r\n          label: 'Candidates'\r\n        },\r\n        resolve: {\r\n\t\t\t\t\t/**\r\n           * Resolve all candidates within the state\r\n           * @param CandidateFactory The candidate factory\r\n           * @returns {Promise} Which resolves to list of candidates\r\n           */\r\n          candidates: function(CandidateFactory) {\r\n            return CandidateFactory.getAllCandidates();\r\n          }\r\n        }\r\n      })\r\n      .state('main.users', {\r\n        url: '/candidates/:candidateName/users',\r\n        templateUrl: 'app/main/user/user.html',\r\n        controller: 'UserController',\r\n        controllerAs: 'userController',\r\n        auth: true,\r\n        data: {\r\n          root: false,\r\n          displayName: 'Users'\r\n        },\r\n        ncyBreadcrumb: {\r\n          parent: 'main.candidates',\r\n          label: 'Users'\r\n        },\r\n        resolve: {\r\n\t\t\t\t\t/**\r\n           * Resolve users\r\n           * @param $stateParams\r\n           * @param UserFactory\r\n           * @returns {Promise}\r\n\t\t\t\t\t */\r\n          users: function($stateParams, UserFactory) {\r\n            return UserFactory.getUsers({\r\n              candidate: $stateParams.candidateName\r\n            }).then(function(response) {\r\n              return response.data || [];\r\n            })\r\n          },\r\n          candidateName: function($stateParams) {\r\n            return $stateParams.candidateName;\r\n          }\r\n        }\r\n      })\r\n      .state('main.users.transfers', {\r\n        url: '/:userId/transfers',\r\n        auth: true,\r\n        views: {\r\n          '@main': { //show transfers in the main.html ui-view even though it is a child of users\r\n            templateUrl: 'app/main/transfer/transfer.html',\r\n            controller: 'TransferController',\r\n            controllerAs: 'transferController'\r\n          }\r\n        },\r\n        data: {\r\n          root: false,\r\n          displayName: 'Transfers'\r\n        },\r\n        ncyBreadcrumb: {\r\n          label: 'Transfers'\r\n        },\r\n        resolve: {\r\n\t\t\t\t\t/**\r\n           * Resolves list of transfers into the state\r\n           * @param $stateParams\r\n           * @param TransferFactory\r\n           * @returns {Promise}\r\n\t\t\t\t\t */\r\n          transfers: function($stateParams, TransferFactory) {\r\n            return TransferFactory.getTransfers({\r\n              candidate: $stateParams.candidateName,\r\n              userId: $stateParams.userId\r\n            }).then(function(response) {\r\n              return response.data || [];\r\n            });\r\n          },\r\n          userId: function($stateParams) {\r\n            return $stateParams.userId;\r\n          },\r\n          candidateName: function($stateParams) {\r\n            return $stateParams.candidateName;\r\n          }\r\n        }\r\n      });\r\n\r\n    $urlRouterProvider.otherwise('/main/candidates');\r\n  }\r\n\r\n})();\r\n\n/* global malarkey:false, moment:false, _:false, console:false, toastr:false */\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .constant('malarkey', malarkey)\r\n    .constant('_', _)\r\n    .constant('apiBaseUrl', 'http://fake-button.herokuapp.com/')\r\n    .constant('console', console)\r\n    .constant('moment', moment)\r\n    .constant('toastr', toastr);\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fullStackCodingChallenge')\r\n    .config(config);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider, toastrConfig) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n\r\n    // Set options third-party lib\r\n    toastrConfig.allowHtml = true;\r\n    toastrConfig.timeOut = 3000;\r\n    toastrConfig.positionClass = 'toast-top-right';\r\n    toastrConfig.preventDuplicates = true;\r\n    toastrConfig.progressBar = true;\r\n  }\r\n\r\n  angular.module(\"uib/template/typeahead/typeahead-popup.html\", []).run([\"$templateCache\", function($templateCache) {\r\n    $templateCache.put(\"uib/template/typeahead/typeahead-popup.html\",\r\n      \"<ul class=\\\"dropdown-menu\\\" ng-show=\\\"isOpen() && !moveInProgress\\\" ng-style=\\\"{top: position().top+'px', left: position().left+'px'}\\\" style=\\\"display: block;\\\" role=\\\"listbox\\\" aria-hidden=\\\"{{!isOpen()}}\\\">\\n\" +\r\n      \"    <li ng-repeat=\\\"match in matches track by $index\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\" ng-click=\\\"selectMatch($index, $event)\\\" role=\\\"option\\\" id=\\\"{{::match.id}}\\\">\\n\" +\r\n      \"        <div uib-typeahead-match index=\\\"$index\\\" match=\\\"match\\\" query=\\\"query\\\" template-url=\\\"templateUrl\\\"></div>\\n\" +\r\n      \"    </li>\\n\" +\r\n      \"<hr></hr>\" +\r\n      \"<li ng-click=\\\"\\\" role=\\\"option\\\"><div uib-typeahead-match index=\\\"-200\\\" match=\\\"{label: 'Cant find your result ? Add a new candidate using the add candidate button.'}\\\" template-url=\\\"templateUrl\\\"></div></li>\\n\" +\r\n      \"</ul>\\n\" +\r\n      \"\");\r\n  }]);\r\n\r\n})();\r\n\nangular.module(\"fullStackCodingChallenge\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<div class=\\\"container\\\"><div><acme-navbar></acme-navbar></div><div class=\\\"content\\\"><div class=\\\"nested\\\" ui-view=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" ui-sref=\\\"main.candidates\\\" ui-sref-opts=\\\"{reload: true}\\\"><span class=\\\"fa fa-database\\\"></span> Admin Dashboard</a></div><ul class=\\\"nav navbar-nav pull-right\\\"><li ng-if=\\\"vm.isLoggedIn();\\\"><a class=\\\"navbar-nav navbar-button\\\" ui-sref=\\\"main.login\\\"><i class=\\\"fa fa-lock\\\"></i> Logout</a></li><li ng-if=\\\"!vm.isLoggedIn();\\\"><a class=\\\"navbar-nav\\\" ui-sref=\\\"main.login\\\"><i class=\\\"fa fa-unlock\\\"></i> Login</a></li></ul></div></nav><nav class=\\\"navbar navbar-fixed-bottom\\\"><div ncy-breadcrumb=\\\"\\\"></div></nav>\");\n$templateCache.put(\"app/main/candidate/candidate.html\",\"<div id=\\\"candidate\\\" ng-intro-options=\\\"candidateController.introOptions\\\" ng-intro-method=\\\"startIntro\\\"><div class=\\\"row\\\"><div class=\\\"col-md-3 col-sm-3\\\"><h3 class=\\\"subtitle\\\"><i class=\\\"fa fa-users\\\"></i> Candidates</h3></div><div class=\\\"col-md-9 col-sm-9 align-right\\\"><button class=\\\"btn btn-info\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); startIntro();\\\"><i class=\\\"fa fa-info-circle\\\"></i> Help</button></div></div><form ng-submit=\\\"candidateController.onSubmit()\\\"><div class=\\\"row\\\"><div class=\\\"col-md-3 col-sm-3\\\"><b>Select a candidate</b></div><div class=\\\"col-md-9 col-sm-9\\\"><input id=\\\"selectCandidate\\\" type=\\\"text\\\" ng-model=\\\"candidateController.candidateName\\\" typeahead-on-select=\\\"candidateController.onSelect()\\\" placeholder=\\\"Start typing...\\\" uib-typeahead=\\\"candidate for candidate in candidateController.candidates | filter:$viewValue | limitTo:8\\\" typeahead-min-length=\\\"1\\\" autofocus=\\\"true\\\" class=\\\"form-control\\\"></div><div class=\\\"col-md-9 col-sm-9\\\">(<span class=\\\"eye-catcher\\\">{{candidateController.candidates.length}}</span> total candidates found)</div></div><div class=\\\"row\\\" id=\\\"candidate-action-button-row\\\"><div class=\\\"col-md-6 col-sm-6\\\"><button class=\\\"btn btn-default\\\" type=\\\"button\\\" id=\\\"createCandidate\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); $event.preventDefault(); $event.stopPropagation(); candidateController.createCandidate();\\\"><i class=\\\"fa fa-plus\\\"></i> Add a new candidate!</button></div><div class=\\\"col-md-6 col-sm-6 align-right\\\"><button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" ng-disabled=\\\"!candidateController.candidateName\\\">Go!</button></div></div></form></div>\");\n$templateCache.put(\"app/main/candidate/candidate.modal.html\",\"<div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\"><i class=\\\"fa fa-users\\\"></i> Add Candidate</h3></div><div class=\\\"modal-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-6 col-sm-6\\\"><b>Candidate</b></div><div class=\\\"col-md-6 col-sm-6\\\"><input autofocus=\\\"true\\\" ng-model=\\\"candidateModal.formOptions.candidate\\\"></div></div></div><div class=\\\"modal-footer\\\"><span ng-if=\\\"candidateModal.success === false\\\" class=\\\"alert alert-warning pull-left\\\">{{candidateModal.errorMessage}}. Please try again</span> <span class=\\\"fa fa-spinner fa-spin\\\" ng-if=\\\"candidateModal.loading\\\"></span> <button class=\\\"btn btn-primary\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); candidateModal.createCandidate();\\\" ng-disabled=\\\"!candidateModal.isValid()\\\" type=\\\"button\\\">OK</button> <button class=\\\"btn btn-warning\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); candidateModal.close()\\\" type=\\\"button\\\">Cancel</button></div>\");\n$templateCache.put(\"app/main/login/login.html\",\"<form id=\\\"login\\\" ng-submit=\\\"loginController.logIn();\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12 col-sm 12\\\"><h3>Login</h3></div></div><hr><div class=\\\"row\\\"><div class=\\\"col-md-6 col-sm-6\\\"><b>User name</b></div><div class=\\\"col-md-6 col-sm-6\\\"><input autofocus=\\\"true\\\" ng-model=\\\"loginController.formOptions.user\\\" type=\\\"text\\\" class=\\\"form-control\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6 col-sm-6\\\"><b>Password</b></div><div class=\\\"col-md-6 col-sm-6\\\"><input ng-model=\\\"loginController.formOptions.pass\\\" type=\\\"password\\\" class=\\\"form-control\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-md-12 col-sm-12 align-right\\\"><button ng-disabled=\\\"!loginController.isValid();\\\" type=\\\"submit\\\" class=\\\"btn btn-default\\\">Log in</button></div></div><div class=\\\"row\\\"><div class=\\\"col-md-12 col-sm 12\\\"><div ng-if=\\\"loginController.success === false\\\"><i class=\\\"fa fa-exclamation-triangle\\\" style=\\\"color: red;\\\"></i> {{loginController.errorMessage}}</div></div></div></form>\");\n$templateCache.put(\"app/main/user/user.delete.modal.html\",\"<div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\"><i class=\\\"fa fa-user-times\\\"></i> Delete User</h3></div><div class=\\\"modal-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><i class=\\\"fa fa-info-circle\\\"></i> Please confirm user deletion. This will delete the user and all their transfers.</div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Name</b></div><div class=\\\"col-md-6\\\"><span>{{userDeleteModal.formOptions.name}}</span></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Email</b></div><div class=\\\"col-md-6\\\"><span>{{userDeleteModal.formOptions.email}}</span></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Candidate</b></div><div class=\\\"col-md-6\\\"><span>{{userDeleteModal.formOptions.candidate}}</span></div></div></div><div class=\\\"modal-footer\\\"><span ng-if=\\\"userDeleteModal.success === false\\\" class=\\\"alert alert-warning pull-left\\\">{{userDeleteModal.errorMessage}}. Please try again</span> <span class=\\\"fa fa-spinner fa-spin\\\" ng-if=\\\"userDeleteModal.loading\\\"></span> <button class=\\\"btn btn-primary\\\" ng-click=\\\"userDeleteModal.deleteUser();\\\" ng-disabled=\\\"userDeleteModal.loading\\\" type=\\\"button\\\">Confirm Delete</button> <button class=\\\"btn btn-warning\\\" ng-click=\\\"userDeleteModal.close()\\\" type=\\\"button\\\">Cancel</button></div>\");\n$templateCache.put(\"app/main/user/user.html\",\"<div class=\\\"user\\\" ng-intro-options=\\\"userController.introOptions\\\" ng-intro-method=\\\"startIntro\\\"><div class=\\\"row\\\"><div class=\\\"col-md-3 col-sm-3\\\"><h3 class=\\\"subtitle\\\"><i class=\\\"fa fa-user\\\"></i> Users</h3></div><div class=\\\"col-md-9 col-sm-9 align-right\\\" id=\\\"user-action-button-row\\\"><button class=\\\"btn btn-primary\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); userController.addUser()\\\"><i class=\\\"fa fa-user-plus\\\"></i> Add new user</button> <button class=\\\"btn btn-info\\\" ng-disabled=\\\"!userController.selectedUser\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); userController.viewTransfers()\\\"><i class=\\\"fa fa-exchange\\\"></i> View transfers for user</button> <button class=\\\"btn btn-danger\\\" ng-disabled=\\\"!userController.selectedUser\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); userController.deleteUser()\\\"><i class=\\\"fa fa-times\\\"></i> Delete selected user</button> <button class=\\\"btn btn-info\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); startIntro();\\\"><i class=\\\"fa fa-info-circle\\\"></i> Help</button></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><span class=\\\"eye-catcher\\\">{{userController.users.length}}</span> user(s) found in candidate <span class=\\\"eye-catcher\\\">{{userController.candidateName}}</span></div></div><div class=\\\"row\\\"><div class=\\\"col-md-12\\\">Use the table to search, sort, group and aggregate users. Select a user for more actions.</div></div><div class=\\\"row\\\"><div class=\\\"dashboard-table-container\\\" id=\\\"user-table-container\\\"><div ui-grid-selection=\\\"\\\" ui-grid-grouping=\\\"\\\" ui-grid=\\\"userController.gridOptions\\\" class=\\\"dashboard-table user-table\\\"></div></div></div></div>\");\n$templateCache.put(\"app/main/user/user.modal.html\",\"<div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\"><i class=\\\"fa fa-user-plus\\\"></i> Add User</h3></div><div class=\\\"modal-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Name</b></div><div class=\\\"col-md-6\\\"><input autofocus=\\\"true\\\" type=\\\"text\\\" placeholder=\\\"Bruce Wayne\\\" ng-model=\\\"userModal.formOptions.name\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Email</b></div><div class=\\\"col-md-6\\\"><input type=\\\"email\\\" placeholder=\\\"bruce@dc.com\\\" ng-model=\\\"userModal.formOptions.email\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Candidate</b></div><div class=\\\"col-md-6\\\"><span>{{userModal.formOptions.candidate}}</span></div></div></div><div class=\\\"modal-footer\\\"><span ng-if=\\\"userModal.success === false\\\" class=\\\"alert alert-warning pull-left\\\">{{userModal.errorMessage}}. Please try again</span> <span class=\\\"fa fa-spinner fa-spin\\\" ng-if=\\\"userModal.loading\\\"></span> <button class=\\\"btn btn-primary\\\" ng-click=\\\"userModal.createUser();\\\" ng-disabled=\\\"!userModal.isValid()\\\" type=\\\"button\\\">OK</button> <button class=\\\"btn btn-warning\\\" ng-click=\\\"userModal.close()\\\" type=\\\"button\\\">Cancel</button></div>\");\n$templateCache.put(\"app/main/transfer/transfer.html\",\"<div class=\\\"transfer\\\" ng-intro-options=\\\"transferController.introOptions\\\" ng-intro-method=\\\"startIntro\\\"><div class=\\\"row\\\"><div class=\\\"col-md-3 col-sm-3\\\"><h3 class=\\\"subtitle\\\"><i class=\\\"fa fa-exchange\\\"></i> Transfers</h3></div><div class=\\\"col-md-9 col-sm-9 align-right\\\" id=\\\"transfer-action-button-row\\\"><button class=\\\"btn btn-primary\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); transferController.addTransfer()\\\"><i class=\\\"fa fa-plus\\\"></i> Add new transfer</button> <button class=\\\"btn btn-info\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); startIntro();\\\"><i class=\\\"fa fa-info-circle\\\"></i> Help</button></div></div><div class=\\\"row\\\"><div ng-if=\\\"transferController.transfers.length\\\" class=\\\"col-md-6\\\"><span class=\\\"eye-catcher\\\">{{transferController.transfers.length}}</span> transfers found for user <span class=\\\"eye-catcher\\\">{{transferController.userId}}</span> in candidate <span class=\\\"eye-catcher\\\">{{transferController.candidateName}}</span></div><div ng-if=\\\"!transferController.transfers.length\\\" class=\\\"col-md-12 col-sm-12\\\"><i class=\\\"fa fa-info-circle\\\"></i> No transfers found. Please <a ng-click=\\\"$event.preventDefault(); $event.stopPropagation(); transferController.addTransfer()\\\">add transfers</a> for this user</div></div><div class=\\\"row\\\"><div class=\\\"col-md-12\\\"><span ng-if=\\\"transferController.transfers.length\\\">Use the table to group, pivot and search through transfers.</span></div></div><div class=\\\"row\\\" id=\\\"transfer-table-container\\\"><div class=\\\"dashboard-table-container\\\" ng-if=\\\"transferController.transfers.length\\\"><div ui-grid-grouping=\\\"\\\" ui-grid=\\\"transferController.gridOptions\\\" class=\\\"dashboard-table\\\"></div></div></div></div>\");\n$templateCache.put(\"app/main/transfer/transfer.modal.html\",\"<div class=\\\"modal-header\\\"><h3 class=\\\"modal-title\\\"><i class=\\\"fa fa-exchange\\\"></i> Add transfer</h3></div><div class=\\\"modal-body\\\"><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Amount</b></div><div class=\\\"col-md-6\\\"><input autofocus=\\\"true\\\" type=\\\"number\\\" placeholder=\\\"1\\\" ng-model=\\\"transferModal.formOptions.amount\\\"></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>User ID</b></div><div class=\\\"col-md-6\\\"><span>{{transferModal.formOptions.userId}}</span></div></div><div class=\\\"row\\\"><div class=\\\"col-md-6\\\"><b>Candidate</b></div><div class=\\\"col-md-6\\\"><span>{{transferModal.formOptions.candidate}}</span></div></div></div><div class=\\\"modal-footer\\\"><span ng-if=\\\"transferModal.success === false\\\" class=\\\"alert alert-warning pull-left\\\">{{transferModal.errorMessage}}. Please try again</span> <span class=\\\"fa fa-spinner fa-spin\\\" ng-if=\\\"transferModal.loading\\\"></span> <button class=\\\"btn btn-primary\\\" ng-click=\\\"transferModal.createTransfer();\\\" ng-disabled=\\\"!transferModal.isValid()\\\" type=\\\"button\\\">OK</button> <button class=\\\"btn btn-warning\\\" ng-click=\\\"transferModal.close()\\\" type=\\\"button\\\">Cancel</button></div>\");}]);"],"sourceRoot":"/source/"}